<?xml version="1.0" encoding="UTF-8" ?>
<OpenSimDocument Version="40500">
	<MocoStudy name="minimize_control_effort">
		<!--The optimal control problem to solve.-->
		<MocoProblem name="problem">
			<!--List of 1 or more MocoPhases.-->
			<MocoPhase name="phases">
				<!--OpenSim Model to provide dynamics.-->
				<ModelProcessor name="model">
					<!--Base model to process.-->
					<model>
						<Model name="inverted_pendulum">
							<!--List of components that this component owns and serializes.-->
							<components>
								<Body name="body">
									<!--List of components that this component owns and serializes.-->
									<components>
										<PhysicalOffsetFrame name="body_center">
											<!--The geometry used to display the axes of this Frame.-->
											<FrameGeometry name="frame_geometry">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
											</FrameGeometry>
											<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
											<attached_geometry>
												<Ellipsoid name="body_center_geom_1">
													<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
													<socket_frame>..</socket_frame>
													<!--Radii of Ellipsoid.-->
													<radii>0.5 0.10000000000000001 0.10000000000000001</radii>
												</Ellipsoid>
											</attached_geometry>
											<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
											<socket_parent>..</socket_parent>
											<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
											<translation>-0.5 0 0</translation>
											<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
											<orientation>-0 0 -0</orientation>
										</PhysicalOffsetFrame>
									</components>
									<!--The geometry used to display the axes of this Frame.-->
									<FrameGeometry name="frame_geometry">
										<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
										<socket_frame>..</socket_frame>
										<!--Scale factors in X, Y, Z directions respectively.-->
										<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
									</FrameGeometry>
									<!--The mass of the body (kg)-->
									<mass>1</mass>
									<!--The location (Vec3) of the mass center in the body frame.-->
									<mass_center>0 0 0</mass_center>
									<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
									<inertia>1 1 1 0 0 0</inertia>
								</Body>
								<PinJoint name="pin">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
									<socket_parent_frame>ground_offset</socket_parent_frame>
									<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
									<socket_child_frame>body_offset</socket_child_frame>
									<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
									<coordinates>
										<Coordinate name="angle">
											<!--All properties of this object have their default values.-->
										</Coordinate>
									</coordinates>
									<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
									<frames>
										<PhysicalOffsetFrame name="ground_offset">
											<!--The geometry used to display the axes of this Frame.-->
											<FrameGeometry name="frame_geometry">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
											</FrameGeometry>
											<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
											<socket_parent>/ground</socket_parent>
											<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
											<translation>0 0 0</translation>
											<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
											<orientation>0 0 0</orientation>
										</PhysicalOffsetFrame>
										<PhysicalOffsetFrame name="body_offset">
											<!--The geometry used to display the axes of this Frame.-->
											<FrameGeometry name="frame_geometry">
												<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
												<socket_frame>..</socket_frame>
												<!--Scale factors in X, Y, Z directions respectively.-->
												<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
											</FrameGeometry>
											<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
											<socket_parent>/body</socket_parent>
											<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
											<translation>-1 0 0</translation>
											<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
											<orientation>0 0 0</orientation>
										</PhysicalOffsetFrame>
									</frames>
								</PinJoint>
							</components>
							<!--The model's ground reference frame.-->
							<Ground name="ground">
								<!--The geometry used to display the axes of this Frame.-->
								<FrameGeometry name="frame_geometry">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame>..</socket_frame>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
								</FrameGeometry>
							</Ground>
							<!--List of joints that connect the bodies.-->
							<JointSet name="jointset">
								<objects />
								<groups />
							</JointSet>
							<!--Controllers that provide the control inputs for Actuators.-->
							<ControllerSet name="controllerset">
								<objects />
								<groups />
							</ControllerSet>
							<!--Forces in the model (includes Actuators).-->
							<ForceSet name="forceset">
								<objects>
									<CoordinateActuator name="actuator">
										<!--Name of the generalized coordinate to which the actuator applies.-->
										<coordinate>angle</coordinate>
										<!--The maximum generalized force produced by this actuator.-->
										<optimal_force>1</optimal_force>
									</CoordinateActuator>
								</objects>
								<groups />
							</ForceSet>
						</Model>
					</model>
				</ModelProcessor>
				<!--Bounds on initial value.-->
				<MocoInitialBounds name="time_initial_bounds">
					<!--1 value: required value. 2 values: lower, upper bounds on value.-->
					<bounds>0</bounds>
				</MocoInitialBounds>
				<!--Bounds on final value.-->
				<MocoFinalBounds name="time_final_bounds">
					<!--1 value: required value. 2 values: lower, upper bounds on value.-->
					<bounds>1</bounds>
				</MocoFinalBounds>
				<!--The state variables' bounds.-->
				<state_infos>
					<MocoVariableInfo name="/pin/angle/value">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-10 10</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>0</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds>3.1415926535897931</final_bounds>
					</MocoVariableInfo>
					<MocoVariableInfo name="/pin/angle/speed">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-50 50</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds>0</initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds>0</final_bounds>
					</MocoVariableInfo>
				</state_infos>
				<!--The control variables' bounds.-->
				<control_infos>
					<MocoVariableInfo name="/forceset/actuator">
						<!--1 value: required value over all time. 2 values: lower, upper bounds on value over all time.-->
						<bounds>-100 100</bounds>
						<!--1 value: required initial value. 2 values: lower, upper bounds on initial value.-->
						<initial_bounds></initial_bounds>
						<!--1 value: required final value. 2 values: lower, upper bounds on final value.-->
						<final_bounds></final_bounds>
					</MocoVariableInfo>
				</control_infos>
				<!--Integral/endpoint quantities to minimize or constrain.-->
				<goals>
					<MocoControlGoal name="goal">
						<!--All properties of this object have their default values.-->
					</MocoControlGoal>
				</goals>
			</MocoPhase>
		</MocoProblem>
		<!--The optimal control algorithm for solving the problem.-->
		<MocoCasADiSolver name="solver">
			<!--The number of uniformly-sized mesh intervals for the problem (default: 100). If a non-uniform mesh exists, the non-uniform mesh is used instead.-->
			<num_mesh_intervals>50</num_mesh_intervals>
			<!--Tolerance used to determine if the objective is minimized (-1 for solver's default)-->
			<optim_convergence_tolerance>0.001</optim_convergence_tolerance>
		</MocoCasADiSolver>
	</MocoStudy>
</OpenSimDocument>
